{
  "hash": "27fd2ff8dbc4fd8cdd97829053b05985",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Client Report - [Insert Project Title]\"\nsubtitle: \"Course DS 250\"\nauthor: \"[STUDENT NAME]\"\nformat:\n  html:\n    self-contained: true\n    page-layout: full\n    title-block-banner: true\n    toc: true\n    toc-depth: 3\n    toc-location: body\n    number-sections: false\n    html-math-method: katex\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-copy: hover\n    code-tools:\n        source: false\n        toggle: true\n        caption: See code\nexecute: \n  warning: false\n    \n---\n\n::: {#e5072fed .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nfrom lets_plot import *\n\nLetsPlot.setup_html(isolated_frame=True)\n```\n:::\n\n\n## Project Notes\n\n__For Project 1 the answer to each question should include a chart **and** a written response. The years labels on your charts should not include a comma. At least **two** of your charts must include reference marks.__  \n\n::: {#7061c711 .cell execution_count=2}\n``` {.python .cell-code}\n# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html\n\n# Include and execute your code here\ndf = pd.read_csv(\"https://raw.githubusercontent.com/byuidatascience/data4names/master/data-raw/names_year/names_year.csv\")\n```\n:::\n\n\n## QUESTION|TASK 1\n\n__How does your name at your birth year compare to its use historically?__\n\n_type your results and analysis here_\n\n::: {#8859be14 .cell execution_count=3}\n``` {.python .cell-code}\ndf.head()\ndf_Tanner = df.query(\"name == 'Tanner'\")\ndf_Tanner.head()\nprint(df_Tanner.dtypes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nname      object\nyear       int64\nAK       float64\nAL       float64\nAR       float64\nAZ       float64\nCA       float64\nCO       float64\nCT       float64\nDC       float64\nDE       float64\nFL       float64\nGA       float64\nHI       float64\nIA       float64\nID       float64\nIL       float64\nIN       float64\nKS       float64\nKY       float64\nLA       float64\nMA       float64\nMD       float64\nME       float64\nMI       float64\nMN       float64\nMO       float64\nMS       float64\nMT       float64\nNC       float64\nND       float64\nNE       float64\nNH       float64\nNJ       float64\nNM       float64\nNV       float64\nNY       float64\nOH       float64\nOK       float64\nOR       float64\nPA       float64\nRI       float64\nSC       float64\nSD       float64\nTN       float64\nTX       float64\nUT       float64\nVA       float64\nVT       float64\nWA       float64\nWI       float64\nWV       float64\nWY       float64\nTotal    float64\ndtype: object\n```\n:::\n:::\n\n\n::: {#cd67bb95 .cell execution_count=4}\n``` {.python .cell-code}\n(\n  ggplot(df_Tanner, aes(x = 'year', y = 'Total')) + \ngeom_line() +\nlabs(\n  x = \"Year\",\n  title = \"Tanner is becoming less popular\"\n) +\ngeom_vline(xintercept = \"2002\", color = \"red\") +\n  theme_bw() +\n  geom_text(aes(x=[2001], y=[15], label=[\"Year I was born\"]), size=8, color='red',hjust = 1)\n\n\n)\n\n\n\n# print(\"Hello\")\n\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <style> html, body { margin: 0; padding: 0; } </style>\n       <script type=\"text/javascript\" data-lets-plot-script=\"library\" src=\"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.6.2/js-package/distr/lets-plot.min.js\"></script>\n   </head>\n   <body>\n          <div id=\"KL51KP\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   const forceImmediateRender = false;\n   const responsive = false;\n   \n   let sizing = {\n       width_mode: \"MIN\",\n       height_mode: \"SCALED\",\n       width: null, \n       height: null \n   };\n   \n   const preferredWidth = document.body.dataset.letsPlotPreferredWidth;\n   if (preferredWidth !== undefined) {\n       sizing = {\n           width_mode: 'FIXED',\n           height_mode: 'SCALED',\n           width: parseFloat(preferredWidth)\n       };\n   }\n   \n   const containerDiv = document.getElementById(\"KL51KP\");\n   let fig = null;\n   \n   function renderPlot() {\n       if (fig === null) {\n           const plotSpec = {\n\"data\":{\n\"year\":[1975.0,1976.0,1977.0,1978.0,1979.0,1980.0,1981.0,1982.0,1983.0,1984.0,1985.0,1986.0,1987.0,1988.0,1989.0,1990.0,1991.0,1992.0,1993.0,1994.0,1995.0,1996.0,1997.0,1998.0,1999.0,2000.0,2001.0,2002.0,2003.0,2004.0,2005.0,2006.0,2007.0,2008.0,2009.0,2010.0,2011.0,2012.0,2013.0,2014.0,2015.0],\n\"Total\":[12.0,20.0,61.0,98.0,247.0,276.0,231.0,320.0,365.0,351.0,470.0,523.0,674.0,884.0,1210.0,1375.0,2268.0,3487.5,3225.0,3459.0,3745.0,3526.5,4012.0,3926.0,3728.5,3620.0,3441.0,3075.0,3214.0,3124.0,2744.5,2722.5,2403.5,2284.5,2359.5,2058.0,2030.0,2048.5,1816.5,1790.0,1599.0]\n},\n\"mapping\":{\n\"x\":\"year\",\n\"y\":\"Total\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"str\",\n\"column\":\"name\"\n},{\n\"type\":\"int\",\n\"column\":\"year\"\n},{\n\"type\":\"float\",\n\"column\":\"AK\"\n},{\n\"type\":\"float\",\n\"column\":\"AL\"\n},{\n\"type\":\"float\",\n\"column\":\"AR\"\n},{\n\"type\":\"float\",\n\"column\":\"AZ\"\n},{\n\"type\":\"float\",\n\"column\":\"CA\"\n},{\n\"type\":\"float\",\n\"column\":\"CO\"\n},{\n\"type\":\"float\",\n\"column\":\"CT\"\n},{\n\"type\":\"float\",\n\"column\":\"DC\"\n},{\n\"type\":\"float\",\n\"column\":\"DE\"\n},{\n\"type\":\"float\",\n\"column\":\"FL\"\n},{\n\"type\":\"float\",\n\"column\":\"GA\"\n},{\n\"type\":\"float\",\n\"column\":\"HI\"\n},{\n\"type\":\"float\",\n\"column\":\"IA\"\n},{\n\"type\":\"float\",\n\"column\":\"ID\"\n},{\n\"type\":\"float\",\n\"column\":\"IL\"\n},{\n\"type\":\"float\",\n\"column\":\"IN\"\n},{\n\"type\":\"float\",\n\"column\":\"KS\"\n},{\n\"type\":\"float\",\n\"column\":\"KY\"\n},{\n\"type\":\"float\",\n\"column\":\"LA\"\n},{\n\"type\":\"float\",\n\"column\":\"MA\"\n},{\n\"type\":\"float\",\n\"column\":\"MD\"\n},{\n\"type\":\"float\",\n\"column\":\"ME\"\n},{\n\"type\":\"float\",\n\"column\":\"MI\"\n},{\n\"type\":\"float\",\n\"column\":\"MN\"\n},{\n\"type\":\"float\",\n\"column\":\"MO\"\n},{\n\"type\":\"float\",\n\"column\":\"MS\"\n},{\n\"type\":\"float\",\n\"column\":\"MT\"\n},{\n\"type\":\"float\",\n\"column\":\"NC\"\n},{\n\"type\":\"float\",\n\"column\":\"ND\"\n},{\n\"type\":\"float\",\n\"column\":\"NE\"\n},{\n\"type\":\"float\",\n\"column\":\"NH\"\n},{\n\"type\":\"float\",\n\"column\":\"NJ\"\n},{\n\"type\":\"float\",\n\"column\":\"NM\"\n},{\n\"type\":\"float\",\n\"column\":\"NV\"\n},{\n\"type\":\"float\",\n\"column\":\"NY\"\n},{\n\"type\":\"float\",\n\"column\":\"OH\"\n},{\n\"type\":\"float\",\n\"column\":\"OK\"\n},{\n\"type\":\"float\",\n\"column\":\"OR\"\n},{\n\"type\":\"float\",\n\"column\":\"PA\"\n},{\n\"type\":\"float\",\n\"column\":\"RI\"\n},{\n\"type\":\"float\",\n\"column\":\"SC\"\n},{\n\"type\":\"float\",\n\"column\":\"SD\"\n},{\n\"type\":\"float\",\n\"column\":\"TN\"\n},{\n\"type\":\"float\",\n\"column\":\"TX\"\n},{\n\"type\":\"float\",\n\"column\":\"UT\"\n},{\n\"type\":\"float\",\n\"column\":\"VA\"\n},{\n\"type\":\"float\",\n\"column\":\"VT\"\n},{\n\"type\":\"float\",\n\"column\":\"WA\"\n},{\n\"type\":\"float\",\n\"column\":\"WI\"\n},{\n\"type\":\"float\",\n\"column\":\"WV\"\n},{\n\"type\":\"float\",\n\"column\":\"WY\"\n},{\n\"type\":\"float\",\n\"column\":\"Total\"\n}]\n},\n\"ggtitle\":{\n\"text\":\"Tanner is becoming less popular\"\n},\n\"guides\":{\n\"x\":{\n\"title\":\"Year\"\n}\n},\n\"theme\":{\n\"name\":\"bw\"\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"line\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"vline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"xintercept\":\"2002\",\n\"color\":\"red\",\n\"data\":{\n}\n},{\n\"geom\":\"text\",\n\"mapping\":{\n\"x\":\"x\",\n\"y\":\"y\",\n\"label\":\"label\"\n},\n\"data_meta\":{\n},\n\"size\":8.0,\n\"color\":\"red\",\n\"hjust\":1.0,\n\"data\":{\n\"x\":[2001.0],\n\"y\":[15.0],\n\"label\":[\"Year I was born\"]\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"1\"\n};\n           fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, containerDiv, sizing);\n       } else {\n           fig.updateView({});\n       }\n   }\n   \n   const renderImmediately = \n       forceImmediateRender || (\n           sizing.width_mode === 'FIXED' && \n           (sizing.height_mode === 'FIXED' || sizing.height_mode === 'SCALED')\n       );\n   \n   if (renderImmediately) {\n       renderPlot();\n   }\n   \n   if (!renderImmediately || responsive) {\n       // Set up observer for initial sizing or continuous monitoring\n       var observer = new ResizeObserver(function(entries) {\n           for (let entry of entries) {\n               if (entry.contentBoxSize && \n                   entry.contentBoxSize[0].inlineSize > 0) {\n                   if (!responsive && observer) {\n                       observer.disconnect();\n                       observer = null;\n                   }\n                   renderPlot();\n                   if (!responsive) {\n                       break;\n                   }\n               }\n           }\n       });\n       \n       observer.observe(containerDiv);\n   }\n   \n   // ----------\n   })();\n   \n   </script>\n   </body>\n</html>\n```\n:::\n:::\n\n\n## QUESTION|TASK 2\n\n__If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?__\n\n_type your results and analysis here_\n\n::: {#9e35b641 .cell execution_count=5}\n``` {.python .cell-code}\ndf_Brittany = df.query(\"name == 'Brittany'\") \ndf_Brittany.head()\n\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>year</th>\n      <th>AK</th>\n      <th>AL</th>\n      <th>AR</th>\n      <th>AZ</th>\n      <th>CA</th>\n      <th>CO</th>\n      <th>CT</th>\n      <th>DC</th>\n      <th>...</th>\n      <th>TN</th>\n      <th>TX</th>\n      <th>UT</th>\n      <th>VA</th>\n      <th>VT</th>\n      <th>WA</th>\n      <th>WI</th>\n      <th>WV</th>\n      <th>WY</th>\n      <th>Total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>53205</th>\n      <td>Brittany</td>\n      <td>1968</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>53206</th>\n      <td>Brittany</td>\n      <td>1969</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>53207</th>\n      <td>Brittany</td>\n      <td>1970</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>32.0</td>\n    </tr>\n    <tr>\n      <th>53208</th>\n      <td>Brittany</td>\n      <td>1971</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>14.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>81.0</td>\n    </tr>\n    <tr>\n      <th>53209</th>\n      <td>Brittany</td>\n      <td>1972</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>11.0</td>\n      <td>10.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>8.0</td>\n      <td>14.0</td>\n      <td>16.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>158.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 54 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#ba5fcf5c .cell execution_count=6}\n``` {.python .cell-code}\n(ggplot(df_Brittany, aes(x = \"year\", y = \"Total\")) +\n  geom_line() +\n  geom_vline(xintercept=1990, linetype=2, color='red', alpha=0.5) +\n  labs(title = \"Most Brittanys born in 1990\" , x = \"Year\"\n  \n  )\n  \n  \n  )\n\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <style> html, body { margin: 0; padding: 0; } </style>\n       <script type=\"text/javascript\" data-lets-plot-script=\"library\" src=\"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.6.2/js-package/distr/lets-plot.min.js\"></script>\n   </head>\n   <body>\n          <div id=\"c62KcJ\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   const forceImmediateRender = false;\n   const responsive = false;\n   \n   let sizing = {\n       width_mode: \"MIN\",\n       height_mode: \"SCALED\",\n       width: null, \n       height: null \n   };\n   \n   const preferredWidth = document.body.dataset.letsPlotPreferredWidth;\n   if (preferredWidth !== undefined) {\n       sizing = {\n           width_mode: 'FIXED',\n           height_mode: 'SCALED',\n           width: parseFloat(preferredWidth)\n       };\n   }\n   \n   const containerDiv = document.getElementById(\"c62KcJ\");\n   let fig = null;\n   \n   function renderPlot() {\n       if (fig === null) {\n           const plotSpec = {\n\"data\":{\n\"year\":[1968.0,1969.0,1970.0,1971.0,1972.0,1973.0,1974.0,1975.0,1976.0,1977.0,1978.0,1979.0,1980.0,1981.0,1982.0,1983.0,1984.0,1985.0,1986.0,1987.0,1988.0,1989.0,1990.0,1991.0,1992.0,1993.0,1994.0,1995.0,1996.0,1997.0,1998.0,1999.0,2000.0,2001.0,2002.0,2003.0,2004.0,2005.0,2006.0,2007.0,2008.0,2009.0,2010.0,2011.0,2012.0,2013.0,2014.0,2015.0],\n\"Total\":[5.0,12.0,32.0,81.0,158.0,166.0,198.0,277.0,304.0,448.0,592.0,764.0,1383.0,1701.0,3093.0,4377.0,7664.0,14010.0,17856.5,18825.5,21952.0,30848.0,32562.5,26963.5,23416.5,21728.0,17808.5,15875.5,13796.0,11527.0,9843.0,7942.0,5183.0,2915.0,1912.0,1559.0,1323.5,1168.0,1009.0,891.0,749.0,644.0,698.0,717.0,745.0,699.0,660.0,636.0]\n},\n\"mapping\":{\n\"x\":\"year\",\n\"y\":\"Total\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"str\",\n\"column\":\"name\"\n},{\n\"type\":\"int\",\n\"column\":\"year\"\n},{\n\"type\":\"float\",\n\"column\":\"AK\"\n},{\n\"type\":\"float\",\n\"column\":\"AL\"\n},{\n\"type\":\"float\",\n\"column\":\"AR\"\n},{\n\"type\":\"float\",\n\"column\":\"AZ\"\n},{\n\"type\":\"float\",\n\"column\":\"CA\"\n},{\n\"type\":\"float\",\n\"column\":\"CO\"\n},{\n\"type\":\"float\",\n\"column\":\"CT\"\n},{\n\"type\":\"float\",\n\"column\":\"DC\"\n},{\n\"type\":\"float\",\n\"column\":\"DE\"\n},{\n\"type\":\"float\",\n\"column\":\"FL\"\n},{\n\"type\":\"float\",\n\"column\":\"GA\"\n},{\n\"type\":\"float\",\n\"column\":\"HI\"\n},{\n\"type\":\"float\",\n\"column\":\"IA\"\n},{\n\"type\":\"float\",\n\"column\":\"ID\"\n},{\n\"type\":\"float\",\n\"column\":\"IL\"\n},{\n\"type\":\"float\",\n\"column\":\"IN\"\n},{\n\"type\":\"float\",\n\"column\":\"KS\"\n},{\n\"type\":\"float\",\n\"column\":\"KY\"\n},{\n\"type\":\"float\",\n\"column\":\"LA\"\n},{\n\"type\":\"float\",\n\"column\":\"MA\"\n},{\n\"type\":\"float\",\n\"column\":\"MD\"\n},{\n\"type\":\"float\",\n\"column\":\"ME\"\n},{\n\"type\":\"float\",\n\"column\":\"MI\"\n},{\n\"type\":\"float\",\n\"column\":\"MN\"\n},{\n\"type\":\"float\",\n\"column\":\"MO\"\n},{\n\"type\":\"float\",\n\"column\":\"MS\"\n},{\n\"type\":\"float\",\n\"column\":\"MT\"\n},{\n\"type\":\"float\",\n\"column\":\"NC\"\n},{\n\"type\":\"float\",\n\"column\":\"ND\"\n},{\n\"type\":\"float\",\n\"column\":\"NE\"\n},{\n\"type\":\"float\",\n\"column\":\"NH\"\n},{\n\"type\":\"float\",\n\"column\":\"NJ\"\n},{\n\"type\":\"float\",\n\"column\":\"NM\"\n},{\n\"type\":\"float\",\n\"column\":\"NV\"\n},{\n\"type\":\"float\",\n\"column\":\"NY\"\n},{\n\"type\":\"float\",\n\"column\":\"OH\"\n},{\n\"type\":\"float\",\n\"column\":\"OK\"\n},{\n\"type\":\"float\",\n\"column\":\"OR\"\n},{\n\"type\":\"float\",\n\"column\":\"PA\"\n},{\n\"type\":\"float\",\n\"column\":\"RI\"\n},{\n\"type\":\"float\",\n\"column\":\"SC\"\n},{\n\"type\":\"float\",\n\"column\":\"SD\"\n},{\n\"type\":\"float\",\n\"column\":\"TN\"\n},{\n\"type\":\"float\",\n\"column\":\"TX\"\n},{\n\"type\":\"float\",\n\"column\":\"UT\"\n},{\n\"type\":\"float\",\n\"column\":\"VA\"\n},{\n\"type\":\"float\",\n\"column\":\"VT\"\n},{\n\"type\":\"float\",\n\"column\":\"WA\"\n},{\n\"type\":\"float\",\n\"column\":\"WI\"\n},{\n\"type\":\"float\",\n\"column\":\"WV\"\n},{\n\"type\":\"float\",\n\"column\":\"WY\"\n},{\n\"type\":\"float\",\n\"column\":\"Total\"\n}]\n},\n\"ggtitle\":{\n\"text\":\"Most Brittanys born in 1990\"\n},\n\"guides\":{\n\"x\":{\n\"title\":\"Year\"\n}\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"line\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"vline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"xintercept\":1990.0,\n\"linetype\":2.0,\n\"color\":\"red\",\n\"alpha\":0.5,\n\"data\":{\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"2\"\n};\n           fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, containerDiv, sizing);\n       } else {\n           fig.updateView({});\n       }\n   }\n   \n   const renderImmediately = \n       forceImmediateRender || (\n           sizing.width_mode === 'FIXED' && \n           (sizing.height_mode === 'FIXED' || sizing.height_mode === 'SCALED')\n       );\n   \n   if (renderImmediately) {\n       renderPlot();\n   }\n   \n   if (!renderImmediately || responsive) {\n       // Set up observer for initial sizing or continuous monitoring\n       var observer = new ResizeObserver(function(entries) {\n           for (let entry of entries) {\n               if (entry.contentBoxSize && \n                   entry.contentBoxSize[0].inlineSize > 0) {\n                   if (!responsive && observer) {\n                       observer.disconnect();\n                       observer = null;\n                   }\n                   renderPlot();\n                   if (!responsive) {\n                       break;\n                   }\n               }\n           }\n       });\n       \n       observer.observe(containerDiv);\n   }\n   \n   // ----------\n   })();\n   \n   </script>\n   </body>\n</html>\n```\n:::\n:::\n\n\n## QUESTION|TASK 3\n\n__Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names in a single chart. What trends do you notice?__\n\n_type your results and analysis here_\n\n::: {#975091b5 .cell execution_count=7}\n``` {.python .cell-code}\n# names =\ndf_bible = df.query(\"name in ['Mary', 'Martha', 'Peter', 'Paul']\")\n```\n:::\n\n\n::: {#67b8ed86 .cell execution_count=8}\n``` {.python .cell-code}\n(ggplot(df_bible, aes( x = \"year\", y = \"Total\", color = \"name\")) +\n  # geom_jitter() +\n  geom_line() +\n  scale_color_manual(values=[\"red\",\"blue\",\"green\",\"yellow\"]) +\n  labs(title = \"Biblical names are becoming less popular\") +\n  theme_bw()\n\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <style> html, body { margin: 0; padding: 0; } </style>\n       <script type=\"text/javascript\" data-lets-plot-script=\"library\" src=\"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.6.2/js-package/distr/lets-plot.min.js\"></script>\n   </head>\n   <body>\n          <div id=\"yZJ7vt\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   const forceImmediateRender = false;\n   const responsive = false;\n   \n   let sizing = {\n       width_mode: \"MIN\",\n       height_mode: \"SCALED\",\n       width: null, \n       height: null \n   };\n   \n   const preferredWidth = document.body.dataset.letsPlotPreferredWidth;\n   if (preferredWidth !== undefined) {\n       sizing = {\n           width_mode: 'FIXED',\n           height_mode: 'SCALED',\n           width: parseFloat(preferredWidth)\n       };\n   }\n   \n   const containerDiv = document.getElementById(\"yZJ7vt\");\n   let fig = null;\n   \n   function renderPlot() {\n       if (fig === null) {\n           const plotSpec = {\n\"data\":{\n\"name\":[\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Martha\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Mary\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Paul\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\",\"Peter\"],\n\"year\":[1910.0,1911.0,1912.0,1913.0,1914.0,1915.0,1916.0,1917.0,1918.0,1919.0,1920.0,1921.0,1922.0,1923.0,1924.0,1925.0,1926.0,1927.0,1928.0,1929.0,1930.0,1931.0,1932.0,1933.0,1934.0,1935.0,1936.0,1937.0,1938.0,1939.0,1940.0,1941.0,1942.0,1943.0,1944.0,1945.0,1946.0,1947.0,1948.0,1949.0,1950.0,1951.0,1952.0,1953.0,1954.0,1955.0,1956.0,1957.0,1958.0,1959.0,1960.0,1961.0,1962.0,1963.0,1964.0,1965.0,1966.0,1967.0,1968.0,1969.0,1970.0,1971.0,1972.0,1973.0,1974.0,1975.0,1976.0,1977.0,1978.0,1979.0,1980.0,1981.0,1982.0,1983.0,1984.0,1985.0,1986.0,1987.0,1988.0,1989.0,1990.0,1991.0,1992.0,1993.0,1994.0,1995.0,1996.0,1997.0,1998.0,1999.0,2000.0,2001.0,2002.0,2003.0,2004.0,2005.0,2006.0,2007.0,2008.0,2009.0,2010.0,2011.0,2012.0,2013.0,2014.0,2015.0,1910.0,1911.0,1912.0,1913.0,1914.0,1915.0,1916.0,1917.0,1918.0,1919.0,1920.0,1921.0,1922.0,1923.0,1924.0,1925.0,1926.0,1927.0,1928.0,1929.0,1930.0,1931.0,1932.0,1933.0,1934.0,1935.0,1936.0,1937.0,1938.0,1939.0,1940.0,1941.0,1942.0,1943.0,1944.0,1945.0,1946.0,1947.0,1948.0,1949.0,1950.0,1951.0,1952.0,1953.0,1954.0,1955.0,1956.0,1957.0,1958.0,1959.0,1960.0,1961.0,1962.0,1963.0,1964.0,1965.0,1966.0,1967.0,1968.0,1969.0,1970.0,1971.0,1972.0,1973.0,1974.0,1975.0,1976.0,1977.0,1978.0,1979.0,1980.0,1981.0,1982.0,1983.0,1984.0,1985.0,1986.0,1987.0,1988.0,1989.0,1990.0,1991.0,1992.0,1993.0,1994.0,1995.0,1996.0,1997.0,1998.0,1999.0,2000.0,2001.0,2002.0,2003.0,2004.0,2005.0,2006.0,2007.0,2008.0,2009.0,2010.0,2011.0,2012.0,2013.0,2014.0,2015.0,1910.0,1911.0,1912.0,1913.0,1914.0,1915.0,1916.0,1917.0,1918.0,1919.0,1920.0,1921.0,1922.0,1923.0,1924.0,1925.0,1926.0,1927.0,1928.0,1929.0,1930.0,1931.0,1932.0,1933.0,1934.0,1935.0,1936.0,1937.0,1938.0,1939.0,1940.0,1941.0,1942.0,1943.0,1944.0,1945.0,1946.0,1947.0,1948.0,1949.0,1950.0,1951.0,1952.0,1953.0,1954.0,1955.0,1956.0,1957.0,1958.0,1959.0,1960.0,1961.0,1962.0,1963.0,1964.0,1965.0,1966.0,1967.0,1968.0,1969.0,1970.0,1971.0,1972.0,1973.0,1974.0,1975.0,1976.0,1977.0,1978.0,1979.0,1980.0,1981.0,1982.0,1983.0,1984.0,1985.0,1986.0,1987.0,1988.0,1989.0,1990.0,1991.0,1992.0,1993.0,1994.0,1995.0,1996.0,1997.0,1998.0,1999.0,2000.0,2001.0,2002.0,2003.0,2004.0,2005.0,2006.0,2007.0,2008.0,2009.0,2010.0,2011.0,2012.0,2013.0,2014.0,2015.0,1910.0,1911.0,1912.0,1913.0,1914.0,1915.0,1916.0,1917.0,1918.0,1919.0,1920.0,1921.0,1922.0,1923.0,1924.0,1925.0,1926.0,1927.0,1928.0,1929.0,1930.0,1931.0,1932.0,1933.0,1934.0,1935.0,1936.0,1937.0,1938.0,1939.0,1940.0,1941.0,1942.0,1943.0,1944.0,1945.0,1946.0,1947.0,1948.0,1949.0,1950.0,1951.0,1952.0,1953.0,1954.0,1955.0,1956.0,1957.0,1958.0,1959.0,1960.0,1961.0,1962.0,1963.0,1964.0,1965.0,1966.0,1967.0,1968.0,1969.0,1970.0,1971.0,1972.0,1973.0,1974.0,1975.0,1976.0,1977.0,1978.0,1979.0,1980.0,1981.0,1982.0,1983.0,1984.0,1985.0,1986.0,1987.0,1988.0,1989.0,1990.0,1991.0,1992.0,1993.0,1994.0,1995.0,1996.0,1997.0,1998.0,1999.0,2000.0,2001.0,2002.0,2003.0,2004.0,2005.0,2006.0,2007.0,2008.0,2009.0,2010.0,2011.0,2012.0,2013.0,2014.0,2015.0],\n\"Total\":[2837.0,3008.0,3902.0,4527.0,5430.0,7217.0,7606.0,8259.0,8339.0,8318.0,8705.0,9254.0,9018.0,8731.0,9163.0,8757.0,8557.0,8088.5,8245.0,7381.5,7830.0,7248.5,7329.5,6905.0,7603.0,7383.5,7176.5,7645.0,8017.5,7956.5,8204.0,8250.5,9514.0,9700.0,9329.0,8744.0,9763.0,10651.0,10006.0,9508.0,9840.0,9598.0,9699.0,9262.0,8585.0,7930.0,7703.0,7365.0,6393.5,6439.0,5504.5,5712.0,5164.0,4879.0,4448.0,3793.0,3267.0,2708.0,2557.0,2399.0,2346.0,2167.0,1718.0,1698.0,1811.0,1768.0,1580.0,1572.0,1469.0,1420.0,1525.0,1549.0,1270.5,1166.0,969.5,1057.0,1134.0,1117.0,969.0,1049.5,1222.0,1096.0,955.5,1027.0,928.0,887.0,849.0,830.0,737.0,693.0,741.0,713.0,670.0,592.0,548.0,557.0,551.0,492.0,452.0,402.0,353.0,315.0,340.0,292.0,337.0,312.0,17568.5,19058.5,24685.5,27013.5,32734.5,41425.0,43642.5,44589.0,49738.5,47296.0,45928.5,49070.0,48514.0,45749.5,44981.0,45006.5,42416.5,43645.5,37597.5,36396.5,38872.5,34680.0,35923.5,32867.5,34809.5,32865.5,31045.0,33171.5,34026.5,32546.0,35422.5,35127.0,37619.0,40505.5,39509.5,38813.0,45337.5,51053.0,50828.0,47835.0,53791.0,48928.5,49898.5,45603.0,48678.5,46351.0,45111.0,43334.0,39392.0,39242.0,36910.5,33353.5,31908.5,31314.5,29094.0,25823.0,23328.5,20413.5,18096.5,16045.0,15333.0,14606.5,12914.5,11429.5,11398.0,9916.0,9941.5,9936.5,9057.5,9605.0,10730.5,10692.0,9912.5,9345.0,8916.5,8269.5,7938.5,7402.5,7992.5,8127.5,8308.0,8400.0,8454.0,7891.5,7746.0,7438.0,6946.0,6627.0,6434.0,6360.0,6184.0,5725.0,5452.0,5004.0,4770.0,4445.0,4078.0,3666.0,3488.0,3149.0,2856.0,2684.0,2554.0,2626.0,2621.0,2588.0,1998.0,2384.0,4777.0,5962.0,6966.5,9209.0,10284.5,10534.0,9890.0,9913.5,10958.5,11251.5,10907.0,11341.5,11553.5,12626.5,12262.0,11203.0,9650.5,10022.5,10493.0,9812.0,11379.0,11324.5,10642.0,12450.5,11121.5,12269.0,12690.5,12685.5,13382.0,13725.5,15335.0,16520.5,16654.0,16997.0,16823.5,18934.0,17120.5,20309.0,21763.0,21399.0,22197.5,25497.0,25662.5,24818.5,24852.0,24897.5,21623.5,21464.5,21377.0,20980.5,20155.0,21904.5,19928.5,20051.5,18978.5,19168.5,18531.0,16884.0,17193.0,13902.0,13123.5,11327.5,9951.5,9554.0,9980.0,10191.0,9725.5,10428.5,10898.5,10694.5,9129.5,8733.0,9284.5,8774.5,8454.0,8112.0,8238.0,7494.5,7705.5,7150.5,6522.0,6477.0,5796.0,5413.0,4879.0,4748.0,4319.0,4015.0,3786.0,3500.0,3257.0,3248.0,3161.5,3129.0,3012.0,2753.0,2545.0,2409.0,2111.0,2055.0,1933.0,2023.0,1988.0,2006.0,578.0,793.0,1647.0,1903.0,2604.0,2993.5,3359.0,3452.0,3698.0,3358.0,3479.0,3530.0,3143.5,3403.0,3510.0,3369.0,3355.0,2883.0,2858.5,3201.0,3251.0,3093.0,2694.5,3120.0,2865.0,3413.0,3706.0,3283.5,4289.0,4633.0,5039.0,5608.0,6582.0,5920.0,5450.0,5604.0,6449.0,8591.0,8050.0,7180.0,8366.0,9004.0,9581.0,8561.0,10073.0,9689.5,11321.0,10284.5,9555.0,10028.5,9545.0,9225.5,9577.0,8571.5,9907.0,8364.5,7626.5,8087.0,8133.0,7170.0,6854.0,5995.5,6479.0,5918.0,5128.5,5707.0,4721.0,5323.0,5425.5,6076.0,5296.0,5551.0,5611.0,4760.5,4743.5,5285.5,5018.0,5161.0,5042.5,4620.5,4866.5,4956.0,3934.5,4532.0,3928.5,3817.5,4069.0,3821.0,3377.0,3430.0,3137.0,2944.0,2851.0,2780.0,2787.0,2540.0,2464.0,2331.0,2167.0,1992.0,1914.0,1814.0,1841.0,1835.0,1896.0,1902.0]\n},\n\"mapping\":{\n\"x\":\"year\",\n\"y\":\"Total\",\n\"color\":\"name\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"str\",\n\"column\":\"name\"\n},{\n\"type\":\"int\",\n\"column\":\"year\"\n},{\n\"type\":\"float\",\n\"column\":\"AK\"\n},{\n\"type\":\"float\",\n\"column\":\"AL\"\n},{\n\"type\":\"float\",\n\"column\":\"AR\"\n},{\n\"type\":\"float\",\n\"column\":\"AZ\"\n},{\n\"type\":\"float\",\n\"column\":\"CA\"\n},{\n\"type\":\"float\",\n\"column\":\"CO\"\n},{\n\"type\":\"float\",\n\"column\":\"CT\"\n},{\n\"type\":\"float\",\n\"column\":\"DC\"\n},{\n\"type\":\"float\",\n\"column\":\"DE\"\n},{\n\"type\":\"float\",\n\"column\":\"FL\"\n},{\n\"type\":\"float\",\n\"column\":\"GA\"\n},{\n\"type\":\"float\",\n\"column\":\"HI\"\n},{\n\"type\":\"float\",\n\"column\":\"IA\"\n},{\n\"type\":\"float\",\n\"column\":\"ID\"\n},{\n\"type\":\"float\",\n\"column\":\"IL\"\n},{\n\"type\":\"float\",\n\"column\":\"IN\"\n},{\n\"type\":\"float\",\n\"column\":\"KS\"\n},{\n\"type\":\"float\",\n\"column\":\"KY\"\n},{\n\"type\":\"float\",\n\"column\":\"LA\"\n},{\n\"type\":\"float\",\n\"column\":\"MA\"\n},{\n\"type\":\"float\",\n\"column\":\"MD\"\n},{\n\"type\":\"float\",\n\"column\":\"ME\"\n},{\n\"type\":\"float\",\n\"column\":\"MI\"\n},{\n\"type\":\"float\",\n\"column\":\"MN\"\n},{\n\"type\":\"float\",\n\"column\":\"MO\"\n},{\n\"type\":\"float\",\n\"column\":\"MS\"\n},{\n\"type\":\"float\",\n\"column\":\"MT\"\n},{\n\"type\":\"float\",\n\"column\":\"NC\"\n},{\n\"type\":\"float\",\n\"column\":\"ND\"\n},{\n\"type\":\"float\",\n\"column\":\"NE\"\n},{\n\"type\":\"float\",\n\"column\":\"NH\"\n},{\n\"type\":\"float\",\n\"column\":\"NJ\"\n},{\n\"type\":\"float\",\n\"column\":\"NM\"\n},{\n\"type\":\"float\",\n\"column\":\"NV\"\n},{\n\"type\":\"float\",\n\"column\":\"NY\"\n},{\n\"type\":\"float\",\n\"column\":\"OH\"\n},{\n\"type\":\"float\",\n\"column\":\"OK\"\n},{\n\"type\":\"float\",\n\"column\":\"OR\"\n},{\n\"type\":\"float\",\n\"column\":\"PA\"\n},{\n\"type\":\"float\",\n\"column\":\"RI\"\n},{\n\"type\":\"float\",\n\"column\":\"SC\"\n},{\n\"type\":\"float\",\n\"column\":\"SD\"\n},{\n\"type\":\"float\",\n\"column\":\"TN\"\n},{\n\"type\":\"float\",\n\"column\":\"TX\"\n},{\n\"type\":\"float\",\n\"column\":\"UT\"\n},{\n\"type\":\"float\",\n\"column\":\"VA\"\n},{\n\"type\":\"float\",\n\"column\":\"VT\"\n},{\n\"type\":\"float\",\n\"column\":\"WA\"\n},{\n\"type\":\"float\",\n\"column\":\"WI\"\n},{\n\"type\":\"float\",\n\"column\":\"WV\"\n},{\n\"type\":\"float\",\n\"column\":\"WY\"\n},{\n\"type\":\"float\",\n\"column\":\"Total\"\n}]\n},\n\"ggtitle\":{\n\"text\":\"Biblical names are becoming less popular\"\n},\n\"theme\":{\n\"name\":\"bw\"\n},\n\"kind\":\"plot\",\n\"scales\":[{\n\"aesthetic\":\"color\",\n\"values\":[\"red\",\"blue\",\"green\",\"yellow\"]\n}],\n\"layers\":[{\n\"geom\":\"line\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"3\"\n};\n           fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, containerDiv, sizing);\n       } else {\n           fig.updateView({});\n       }\n   }\n   \n   const renderImmediately = \n       forceImmediateRender || (\n           sizing.width_mode === 'FIXED' && \n           (sizing.height_mode === 'FIXED' || sizing.height_mode === 'SCALED')\n       );\n   \n   if (renderImmediately) {\n       renderPlot();\n   }\n   \n   if (!renderImmediately || responsive) {\n       // Set up observer for initial sizing or continuous monitoring\n       var observer = new ResizeObserver(function(entries) {\n           for (let entry of entries) {\n               if (entry.contentBoxSize && \n                   entry.contentBoxSize[0].inlineSize > 0) {\n                   if (!responsive && observer) {\n                       observer.disconnect();\n                       observer = null;\n                   }\n                   renderPlot();\n                   if (!responsive) {\n                       break;\n                   }\n               }\n           }\n       });\n       \n       observer.observe(containerDiv);\n   }\n   \n   // ----------\n   })();\n   \n   </script>\n   </body>\n</html>\n```\n:::\n:::\n\n\n## QUESTION|TASK 4\n\n__Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?__  \n\n_type your results and analysis here_\n\n::: {#350c18ba .cell execution_count=9}\n``` {.python .cell-code}\ndf_Anakin = df.query(\"name == 'Anakin'\")\ndf_Anakin.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>year</th>\n      <th>AK</th>\n      <th>AL</th>\n      <th>AR</th>\n      <th>AZ</th>\n      <th>CA</th>\n      <th>CO</th>\n      <th>CT</th>\n      <th>DC</th>\n      <th>...</th>\n      <th>TN</th>\n      <th>TX</th>\n      <th>UT</th>\n      <th>VA</th>\n      <th>VT</th>\n      <th>WA</th>\n      <th>WI</th>\n      <th>WV</th>\n      <th>WY</th>\n      <th>Total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>19325</th>\n      <td>Anakin</td>\n      <td>1998</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>19326</th>\n      <td>Anakin</td>\n      <td>1999</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>19.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>15.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>61.0</td>\n    </tr>\n    <tr>\n      <th>19327</th>\n      <td>Anakin</td>\n      <td>2000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>44.0</td>\n    </tr>\n    <tr>\n      <th>19328</th>\n      <td>Anakin</td>\n      <td>2001</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>15.0</td>\n    </tr>\n    <tr>\n      <th>19329</th>\n      <td>Anakin</td>\n      <td>2002</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>17.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 54 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#199f774e .cell execution_count=10}\n``` {.python .cell-code}\n(ggplot(df_Anakin, aes(x = \"year\", y = \"Total\")) +\ngeom_line() +\nlabs(title = \"Anakin is getting more popular\", x = \"Years\") +\ngeom_vline(xintercept = \"1999\", color = \"darkgreen\") +\ngeom_vline(xintercept = \"2002\", color = \"blue\") +\ngeom_vline(xintercept = \"2005\", color = \"red\") +\ngeom_text(aes(x=[1999], y=[65], label=[\"Episode I\"]), size=8, color='darkgreen',hjust = 0) +\ngeom_text(aes(x=[2002], y=[25], label=[\"Episode II\"]), size=8, color='blue',hjust = 0) +\ngeom_text(aes(x=[2005], y=[100], label=[\"Episode III\"]), size=8, color='red',hjust = 0)\n\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <style> html, body { margin: 0; padding: 0; } </style>\n       <script type=\"text/javascript\" data-lets-plot-script=\"library\" src=\"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.6.2/js-package/distr/lets-plot.min.js\"></script>\n   </head>\n   <body>\n          <div id=\"W88HHR\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   const forceImmediateRender = false;\n   const responsive = false;\n   \n   let sizing = {\n       width_mode: \"MIN\",\n       height_mode: \"SCALED\",\n       width: null, \n       height: null \n   };\n   \n   const preferredWidth = document.body.dataset.letsPlotPreferredWidth;\n   if (preferredWidth !== undefined) {\n       sizing = {\n           width_mode: 'FIXED',\n           height_mode: 'SCALED',\n           width: parseFloat(preferredWidth)\n       };\n   }\n   \n   const containerDiv = document.getElementById(\"W88HHR\");\n   let fig = null;\n   \n   function renderPlot() {\n       if (fig === null) {\n           const plotSpec = {\n\"data\":{\n\"year\":[1998.0,1999.0,2000.0,2001.0,2002.0,2003.0,2004.0,2005.0,2006.0,2007.0,2008.0,2009.0,2010.0,2011.0,2012.0,2013.0,2014.0,2015.0],\n\"Total\":[5.0,61.0,44.0,15.0,17.0,7.0,15.0,88.0,57.0,56.0,39.0,60.0,35.0,34.0,75.0,91.0,162.0,177.0]\n},\n\"mapping\":{\n\"x\":\"year\",\n\"y\":\"Total\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"str\",\n\"column\":\"name\"\n},{\n\"type\":\"int\",\n\"column\":\"year\"\n},{\n\"type\":\"float\",\n\"column\":\"AK\"\n},{\n\"type\":\"float\",\n\"column\":\"AL\"\n},{\n\"type\":\"float\",\n\"column\":\"AR\"\n},{\n\"type\":\"float\",\n\"column\":\"AZ\"\n},{\n\"type\":\"float\",\n\"column\":\"CA\"\n},{\n\"type\":\"float\",\n\"column\":\"CO\"\n},{\n\"type\":\"float\",\n\"column\":\"CT\"\n},{\n\"type\":\"float\",\n\"column\":\"DC\"\n},{\n\"type\":\"float\",\n\"column\":\"DE\"\n},{\n\"type\":\"float\",\n\"column\":\"FL\"\n},{\n\"type\":\"float\",\n\"column\":\"GA\"\n},{\n\"type\":\"float\",\n\"column\":\"HI\"\n},{\n\"type\":\"float\",\n\"column\":\"IA\"\n},{\n\"type\":\"float\",\n\"column\":\"ID\"\n},{\n\"type\":\"float\",\n\"column\":\"IL\"\n},{\n\"type\":\"float\",\n\"column\":\"IN\"\n},{\n\"type\":\"float\",\n\"column\":\"KS\"\n},{\n\"type\":\"float\",\n\"column\":\"KY\"\n},{\n\"type\":\"float\",\n\"column\":\"LA\"\n},{\n\"type\":\"float\",\n\"column\":\"MA\"\n},{\n\"type\":\"float\",\n\"column\":\"MD\"\n},{\n\"type\":\"float\",\n\"column\":\"ME\"\n},{\n\"type\":\"float\",\n\"column\":\"MI\"\n},{\n\"type\":\"float\",\n\"column\":\"MN\"\n},{\n\"type\":\"float\",\n\"column\":\"MO\"\n},{\n\"type\":\"float\",\n\"column\":\"MS\"\n},{\n\"type\":\"float\",\n\"column\":\"MT\"\n},{\n\"type\":\"float\",\n\"column\":\"NC\"\n},{\n\"type\":\"float\",\n\"column\":\"ND\"\n},{\n\"type\":\"float\",\n\"column\":\"NE\"\n},{\n\"type\":\"float\",\n\"column\":\"NH\"\n},{\n\"type\":\"float\",\n\"column\":\"NJ\"\n},{\n\"type\":\"float\",\n\"column\":\"NM\"\n},{\n\"type\":\"float\",\n\"column\":\"NV\"\n},{\n\"type\":\"float\",\n\"column\":\"NY\"\n},{\n\"type\":\"float\",\n\"column\":\"OH\"\n},{\n\"type\":\"float\",\n\"column\":\"OK\"\n},{\n\"type\":\"float\",\n\"column\":\"OR\"\n},{\n\"type\":\"float\",\n\"column\":\"PA\"\n},{\n\"type\":\"float\",\n\"column\":\"RI\"\n},{\n\"type\":\"float\",\n\"column\":\"SC\"\n},{\n\"type\":\"float\",\n\"column\":\"SD\"\n},{\n\"type\":\"float\",\n\"column\":\"TN\"\n},{\n\"type\":\"float\",\n\"column\":\"TX\"\n},{\n\"type\":\"float\",\n\"column\":\"UT\"\n},{\n\"type\":\"float\",\n\"column\":\"VA\"\n},{\n\"type\":\"float\",\n\"column\":\"VT\"\n},{\n\"type\":\"float\",\n\"column\":\"WA\"\n},{\n\"type\":\"float\",\n\"column\":\"WI\"\n},{\n\"type\":\"float\",\n\"column\":\"WV\"\n},{\n\"type\":\"float\",\n\"column\":\"WY\"\n},{\n\"type\":\"float\",\n\"column\":\"Total\"\n}]\n},\n\"ggtitle\":{\n\"text\":\"Anakin is getting more popular\"\n},\n\"guides\":{\n\"x\":{\n\"title\":\"Years\"\n}\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"line\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"vline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"xintercept\":\"1999\",\n\"color\":\"darkgreen\",\n\"data\":{\n}\n},{\n\"geom\":\"vline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"xintercept\":\"2002\",\n\"color\":\"blue\",\n\"data\":{\n}\n},{\n\"geom\":\"vline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"xintercept\":\"2005\",\n\"color\":\"red\",\n\"data\":{\n}\n},{\n\"geom\":\"text\",\n\"mapping\":{\n\"x\":\"x\",\n\"y\":\"y\",\n\"label\":\"label\"\n},\n\"data_meta\":{\n},\n\"size\":8.0,\n\"color\":\"darkgreen\",\n\"hjust\":0.0,\n\"data\":{\n\"x\":[1999.0],\n\"y\":[65.0],\n\"label\":[\"Episode I\"]\n}\n},{\n\"geom\":\"text\",\n\"mapping\":{\n\"x\":\"x1\",\n\"y\":\"y1\",\n\"label\":\"label1\"\n},\n\"data_meta\":{\n},\n\"size\":8.0,\n\"color\":\"blue\",\n\"hjust\":0.0,\n\"data\":{\n\"x1\":[2002.0],\n\"y1\":[25.0],\n\"label1\":[\"Episode II\"]\n}\n},{\n\"geom\":\"text\",\n\"mapping\":{\n\"x\":\"x2\",\n\"y\":\"y2\",\n\"label\":\"label2\"\n},\n\"data_meta\":{\n},\n\"size\":8.0,\n\"color\":\"red\",\n\"hjust\":0.0,\n\"data\":{\n\"x2\":[2005.0],\n\"y2\":[100.0],\n\"label2\":[\"Episode III\"]\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"4\"\n};\n           fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, containerDiv, sizing);\n       } else {\n           fig.updateView({});\n       }\n   }\n   \n   const renderImmediately = \n       forceImmediateRender || (\n           sizing.width_mode === 'FIXED' && \n           (sizing.height_mode === 'FIXED' || sizing.height_mode === 'SCALED')\n       );\n   \n   if (renderImmediately) {\n       renderPlot();\n   }\n   \n   if (!renderImmediately || responsive) {\n       // Set up observer for initial sizing or continuous monitoring\n       var observer = new ResizeObserver(function(entries) {\n           for (let entry of entries) {\n               if (entry.contentBoxSize && \n                   entry.contentBoxSize[0].inlineSize > 0) {\n                   if (!responsive && observer) {\n                       observer.disconnect();\n                       observer = null;\n                   }\n                   renderPlot();\n                   if (!responsive) {\n                       break;\n                   }\n               }\n           }\n       });\n       \n       observer.observe(containerDiv);\n   }\n   \n   // ----------\n   })();\n   \n   </script>\n   </body>\n</html>\n```\n:::\n:::\n\n\n---\n\n## STRETCH QUESTION|TASK 1\n<!-- \n__Reproduce the chart Elliot using the data from the `names_year.csv` file.__ \n\n_type your results and analysis here_\n\n::: {#5898bdfe .cell execution_count=11}\n``` {.python .cell-code}\n# Include and execute your code here\n\n```\n:::\n\n\n--- -->\n\n",
    "supporting": [
      "project1_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}