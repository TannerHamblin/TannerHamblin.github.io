---
title: "Client Report - [Insert Project Title]"
subtitle: "Course DS 250"
author: "[STUDENT NAME]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd
import numpy as np
from lets_plot import *

LetsPlot.setup_html(isolated_frame=True)
```


```{python}
# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
df = pd.read_json("https://github.com/byuidatascience/data4missing/raw/master/data-raw/flights_missing/flights_missing.json")
```

## Elevator pitch
_A SHORT (2-3 SENTENCES) PARAGRAPH THAT `DESCRIBES KEY INSIGHTS` TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS._ (Note: this is not a summary of the project, but a summary of the results.)

The following graphs show that the best month to fly is december to avoid delays is september. The most common type of delay you are likley to encounter is weather delays. The airport out of the list with the lowest average delay is SAN with a delay of .79 hours. The worst is Orlando with an average delay of 1.13 hours.

## QUESTION|TASK 1

__Fix all of the varied missing data types in the data to be consistent (all missing values should be displayed as “NaN”).__ In your report include one record example (one row) from your new data, in the raw JSON format. Your example should display the "NaN" for at least one missing value.__  

_type your results and analysis here_

Dropped any outliers or missing data replacing them with the value NAN

```{python}

df.num_of_delays_late_aircraft.replace(-999,np.nan,inplace = True) 
df.num_of_delays_carrier.replace("1500+",1500,inplace = True) 
df.airport_name.replace("",np.nan,inplace = True) 
df.month.replace("n/a",np.nan,inplace = True) 
df.minutes_delayed_nas.replace(-999.0,np.nan,inplace = True) 
df.num_of_delays_late_aircraft.value_counts(dropna=False)
df['num_of_delays_carrier'] = df['num_of_delays_carrier'].astype(int)
df.month.replace("Febuary","February",inplace = True)
month_order = ["January", "February", "March", "April",
          "May", "June", "July", "August",
          "September", "October", "November", "December"] 
df['month'] = pd.Categorical(df['month'],categories=month_order, ordered=True)

df.head(1) 





```

## QUESTION|TASK 2

__Which airport has the worst delays?__ Describe the metric you chose, and why you chose it to determine the “worst” airport. Your answer should include a summary table that lists (for each airport) the total number of flights, total number of delayed flights, proportion of delayed flights, and average delay time in hours.   

I used the metric of sorting the flights by airport and using a metric I found the total flights per airport as well as the total delayed flights by airports. using these I found the proportion of delay time per flight. SFO sanfrancisco has the worst proportion with .261 of the flights having delays. Then I found the average delay time and we can see that Orlando has the worst average delay time of 1.13 hours.

```{python}
df2 = df.groupby("airport_code").agg(
  total_flights = ('num_of_flights_total', 'sum'),
  total_delayed_flights = ('num_of_delays_total', 'sum'),
  sum_delay_time = ('minutes_delayed_total', 'sum')
)

df2['sum_delay_time'] = df2['sum_delay_time'] / 60
df2['prop_delayed_flight'] = round(df2['total_delayed_flights'] / df2['total_flights'],3)

df2['avg_delay_time'] = round(df2['sum_delay_time'] / df2['total_delayed_flights'],2)



df2
# df2.columns

```



## QUESTION|TASK 3

__What is the best month to fly if you want to avoid delays of any length?__ Describe the metric you chose and why you chose it to calculate your answer. Include one chart to help support your answer, with the x-axis ordered by month. (To answer this question, you will need to remove any rows that are missing the `Month` variable.)  

I found the proportion of flight delays and total delayed flights by each month. we find that July has the most delayed flights with 319960 in the month of july.

```{python}
df3 = df.groupby('month').agg(
  total_flights = ('num_of_flights_total', 'sum'),
  total_delayed_flights = ('num_of_delays_total', 'sum')
).reset_index()
df3.month.value_counts(dropna=True)

df3['total_flight_by_delay'] = round(df3['total_delayed_flights'] / df3['total_flights'],2)

df3
```

The following graph shows us that the proportion of delays to flights showing the chances of you experiencing a delay on your flight is lowest in the month of september.

```{python}
p = (ggplot(df3, aes(x='month', y='total_flight_by_delay', )) +
  geom_bar(stat = 'identity', color = 'black', fill = 'white', width = .85) +
  xlab('Month') +
  ylab('% of Flights Delayed') +
  labs(
    title="Chance of Experiencing Any Delay by Month"
  )+
  theme_classic() +
  theme(
    axis_text_y= element_text(),
    plot_title= element_text(angle=90, size=20),
    panel_background= element_rect(fill = "gray")
  )

)
p.show()
```

## QUESTION|TASK 4

According to the BTS website, the “Weather” category only accounts for severe weather delays. Mild weather delays are not counted in the “Weather” category, but are actually included in both the “NAS” and “Late-Arriving Aircraft” categories. __Your job is to create a new column that calculates the total number of flights delayed by weather (both severe and mild).__ You will need to replace all the missing values in the Late Aircraft variable with the mean. Show your work by printing the first 5 rows of data in a table. Use these three rules for your calculations:  

    a. 100% of delayed flights in the Weather category are due to weather  
    a. 30% of all delayed flights in the Late-Arriving category are due to weather  
    a. From April to August, 40% of delayed flights in the NAS category are due to weather. The rest of the months, the proportion rises to 65%    

The following shows the first 5 rows of airport codes. They show that the total weather delays that are not severe. we see that the orlando has the most minor weather delays.

```{python}
df4 = df.copy()
df4['num_of_delays_late_aircraft'] = df4['num_of_delays_late_aircraft'].fillna(df4['num_of_delays_late_aircraft'].mean())

```


```{python}
df4['total_weather_delay'] = df4['num_of_delays_late_aircraft'] + (df4['num_of_delays_late_aircraft'] * .3) + np.select(df4['month'].isin(["April",
          "May", "June", "July", "August"]), df4['num_of_delays_nas'] * .4, df4['num_of_delays_nas'] * .65)

df4.head()

```




## QUESTION|TASK 5

__Using the new weather variable calculated above, create a barplot showing the proportion of all flights that are delayed by weather at each airport. Describe what you learn from this graph.__  

The following results show that your chances of encountering a delay whether it is from weather, security, or carrier all being factored in is the highest at IAD airport and lowest at ATL airport getting as low as 10% chance.

```{python}
df4bar = df4.groupby('airport_code').agg(
  total_flights = ('num_of_flights_total', 'sum'),
  total_delayed_flights = ('total_weather_delay', 'sum'),
  num_of_delays_carrier = ("num_of_delays_carrier", 'sum'),
  num_of_delays_security = ("num_of_delays_security", 'sum'),
).reset_index()

df4bar['prop_of_delays_weather'] = round(df4bar['total_delayed_flights'] / df4bar['total_flights'],2)
df4bar['prop_of_delays_carrier'] = round(df4bar['num_of_delays_carrier'] / df4bar['total_flights'],2)
df4bar['prop_of_delays_security'] = round(df4bar['num_of_delays_security'] / df4bar['total_flights'],2)




df4bar

```
```{python}


p = (ggplot(df4bar, aes(x='airport_code', y='prop_of_delays_weather', )) +
  geom_bar(stat = 'identity', color = 'black', fill = 'white', width = .85) +
  xlab('airport_code') +
  ylab('% of Flights Delayed') +
  labs(
    title="Chance of Experiencing Any Delay by Airport"
  )+
  theme_classic() +
  theme(
    axis_text_y= element_text(),
    plot_title= element_text(angle=90, size=20),
    panel_background= element_rect(fill = "gray")
  )

)
p.show()

```


---


## STRETCH QUESTION|TASK 1

__Which delay is the worst delay?__ Create a similar analysis as above for Weahter Delay with: Carrier Delay and Security Delay. Compare the proportion of delay for each of the three categories in a Chart and a Table. Describe your results.

The following shows the delays but all types are separated into the categories weather, carrier, and security. We can see that carrier delays are highest in IAD and SAN airports. And the highest chance of encountering a delay from weather is also IAD and SAN.

```{python}
df5 = pd.melt(
  df4bar,
  id_vars= 'airport_code',
  value_vars=  ['prop_of_delays_weather', 'prop_of_delays_carrier', 'prop_of_delays_security'],
  var_name= 'delay_type', 
  value_name= 'proportion'
)

p = (
    ggplot(
        df5,
        aes(x='airport_code',
            y='proportion',
            fill='delay_type')          # <─ aesthetic mapping goes here
    )
    + geom_bar(
        stat='identity',
        colour='black',
        width=.85,
        position='dodge'               # side-by-side bars by delay type
    )
    + xlab('Airport Code')
    + ylab('Proportion of Flights Delayed')
    + ggtitle('Chance of Experiencing Any Delay by Airport')
    + theme_classic()
    + theme(
        axis_text_x=element_text(angle=45, hjust=1),  # tilt if labels overlap
        plot_title=element_text(size=20),
        panel_background=element_rect(fill="gray")
    )
)

p.show()

```

---


<!-- C:\Users\tanne\OneDrive\Documents\GitHub\Tanner_Hamblin_spr25\250_Projects\project4.qmd -->
